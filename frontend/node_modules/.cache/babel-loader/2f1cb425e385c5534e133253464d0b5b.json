{"ast":null,"code":"import { FILE_UPLOAD_REQUEST, FILE_UPLOAD_SUCCESS, FILE_UPLOAD_FAIL, FILE_UPLOAD_RESET } from \"../constants/fileConstant\";\nconst API = process.env.REACT_APP_API;\nexport const fileUpload = file => async dispatch => {\n  try {\n    dispatch({\n      type: FILE_UPLOAD_REQUEST\n    });\n    const {\n      data\n    } = await fetch(\"/api/file_upload\", {\n      file: file\n    });\n    dispatch({\n      type: FILE_UPLOAD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: FILE_UPLOAD_FAIL,\n      payload: error.response && error.response.data.msg ? error.respone.data.msg : error\n    });\n  }\n};","map":{"version":3,"sources":["/Users/ngocho/Desktop/online_check/frontend/src/actions/fileAction.js"],"names":["FILE_UPLOAD_REQUEST","FILE_UPLOAD_SUCCESS","FILE_UPLOAD_FAIL","FILE_UPLOAD_RESET","API","process","env","REACT_APP_API","fileUpload","file","dispatch","type","data","fetch","payload","error","response","msg","respone"],"mappings":"AAAA,SACEA,mBADF,EAEEC,mBAFF,EAGEC,gBAHF,EAIEC,iBAJF,QAKO,2BALP;AAOA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAAxB;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACtD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACA,UAAM;AAAEY,MAAAA;AAAF,QAAW,MAAMC,KAAK,CAAC,kBAAD,EAAqB;AAAEJ,MAAAA,IAAI,EAAEA;AAAR,KAArB,CAA5B;AACAC,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,mBADC;AAEPa,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,gBADC;AAEPY,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,GAAtC,GACIF,KAAK,CAACG,OAAN,CAAcN,IAAd,CAAmBK,GADvB,GAEIF;AALC,KAAD,CAAR;AAOD;AACF,CAjBM","sourcesContent":["import {\n  FILE_UPLOAD_REQUEST,\n  FILE_UPLOAD_SUCCESS,\n  FILE_UPLOAD_FAIL,\n  FILE_UPLOAD_RESET,\n} from \"../constants/fileConstant\";\n\nconst API = process.env.REACT_APP_API;\n\nexport const fileUpload = (file) => async (dispatch) => {\n  try {\n    dispatch({ type: FILE_UPLOAD_REQUEST });\n    const { data } = await fetch(\"/api/file_upload\", { file: file });\n    dispatch({\n      type: FILE_UPLOAD_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: FILE_UPLOAD_FAIL,\n      payload:\n        error.response && error.response.data.msg\n          ? error.respone.data.msg\n          : error,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}