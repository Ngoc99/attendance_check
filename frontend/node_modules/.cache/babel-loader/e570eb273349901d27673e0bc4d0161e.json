{"ast":null,"code":"import { FILE_UPLOAD_REQUEST, FILE_UPLOAD_SUCCESS, FILE_UPLOAD_FAIL, FILE_UPLOAD_RESET } from \"../constants/fileConstant\";\nimport axios from \"axios\";\nconst API = process.env.REACT_APP_API;\nexport const fileUpload = formData => async dispatch => {\n  try {\n    //console.log(formData);\n    dispatch({\n      type: FILE_UPLOAD_REQUEST\n    }); //const url = JSON.stringify(`${API}/file_upload`);\n\n    const response = await fetch(\"/file_upload\", {\n      method: \"POST\",\n      body: formData // mode: \"no-cors\",\n      // headers: {\n      //   Accept: \"application/json\",\n      // },\n\n    }).then(result => result.json()).then(data => console.log(data)).catch(error => error.message);\n    dispatch({\n      type: FILE_UPLOAD_SUCCESS,\n      payload: response.msg\n    });\n  } catch (error) {\n    dispatch({\n      type: FILE_UPLOAD_FAIL,\n      payload: error.response && error.response.msg ? error.respone.data.msg : error\n    });\n  }\n};\nexport const sayHi = () => async dispatch => {\n  try {\n    console.log(\"calling data\"); // const { data } = axios\n    //   .get({ url: `${API}/say_hi` })\n    //   .then((res) => res.data);\n\n    const data = await fetch(`${API}/say_hi`).then(response => response.json()).then(data => console.log(data));\n\n    if (data) {\n      console.log(data);\n    }\n  } catch (e) {\n    console.log(e.message);\n  }\n};","map":{"version":3,"sources":["/Users/ngocho/Desktop/online_check/frontend/src/actions/fileAction.js"],"names":["FILE_UPLOAD_REQUEST","FILE_UPLOAD_SUCCESS","FILE_UPLOAD_FAIL","FILE_UPLOAD_RESET","axios","API","process","env","REACT_APP_API","fileUpload","formData","dispatch","type","response","fetch","method","body","then","result","json","data","console","log","catch","error","message","payload","msg","respone","sayHi","e"],"mappings":"AAAA,SACEA,mBADF,EAEEC,mBAFF,EAGEC,gBAHF,EAIEC,iBAJF,QAKO,2BALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAAxB;AAEA,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACF;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR,CAFE,CAGF;;AACA,UAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAD,EAAiB;AAC3CC,MAAAA,MAAM,EAAE,MADmC;AAE3CC,MAAAA,IAAI,EAAEN,QAFqC,CAG3C;AACA;AACA;AACA;;AAN2C,KAAjB,CAAL,CAQpBO,IARoB,CAQdC,MAAD,IAAYA,MAAM,CAACC,IAAP,EARG,EASpBF,IAToB,CASdG,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CATK,EAUpBG,KAVoB,CAUbC,KAAD,IAAWA,KAAK,CAACC,OAVH,CAAvB;AAYAd,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,mBADC;AAEPyB,MAAAA,OAAO,EAAEb,QAAQ,CAACc;AAFX,KAAD,CAAR;AAID,GApBD,CAoBE,OAAOH,KAAP,EAAc;AACdb,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,gBADC;AAEPwB,MAAAA,OAAO,EACLF,KAAK,CAACX,QAAN,IAAkBW,KAAK,CAACX,QAAN,CAAec,GAAjC,GAAuCH,KAAK,CAACI,OAAN,CAAcR,IAAd,CAAmBO,GAA1D,GAAgEH;AAH3D,KAAD,CAAR;AAKD;AACF,CA5BM;AA8BP,OAAO,MAAMK,KAAK,GAAG,MAAM,MAAOlB,QAAP,IAAoB;AAC7C,MAAI;AACFU,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADE,CAGF;AACA;AACA;;AACA,UAAMF,IAAI,GAAG,MAAMN,KAAK,CAAE,GAAET,GAAI,SAAR,CAAL,CAChBY,IADgB,CACVJ,QAAD,IAAcA,QAAQ,CAACM,IAAT,EADH,EAEhBF,IAFgB,CAEVG,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFC,CAAnB;;AAIA,QAAIA,IAAJ,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;AACF,GAbD,CAaE,OAAOU,CAAP,EAAU;AACVT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAC,CAACL,OAAd;AACD;AACF,CAjBM","sourcesContent":["import {\n  FILE_UPLOAD_REQUEST,\n  FILE_UPLOAD_SUCCESS,\n  FILE_UPLOAD_FAIL,\n  FILE_UPLOAD_RESET,\n} from \"../constants/fileConstant\";\nimport axios from \"axios\";\n\nconst API = process.env.REACT_APP_API;\n\nexport const fileUpload = (formData) => async (dispatch) => {\n  try {\n    //console.log(formData);\n    dispatch({ type: FILE_UPLOAD_REQUEST });\n    //const url = JSON.stringify(`${API}/file_upload`);\n    const response = await fetch(\"/file_upload\", {\n      method: \"POST\",\n      body: formData,\n      // mode: \"no-cors\",\n      // headers: {\n      //   Accept: \"application/json\",\n      // },\n    })\n      .then((result) => result.json())\n      .then((data) => console.log(data))\n      .catch((error) => error.message);\n\n    dispatch({\n      type: FILE_UPLOAD_SUCCESS,\n      payload: response.msg,\n    });\n  } catch (error) {\n    dispatch({\n      type: FILE_UPLOAD_FAIL,\n      payload:\n        error.response && error.response.msg ? error.respone.data.msg : error,\n    });\n  }\n};\n\nexport const sayHi = () => async (dispatch) => {\n  try {\n    console.log(\"calling data\");\n\n    // const { data } = axios\n    //   .get({ url: `${API}/say_hi` })\n    //   .then((res) => res.data);\n    const data = await fetch(`${API}/say_hi`)\n      .then((response) => response.json())\n      .then((data) => console.log(data));\n\n    if (data) {\n      console.log(data);\n    }\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}