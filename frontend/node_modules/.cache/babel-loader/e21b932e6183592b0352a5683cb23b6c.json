{"ast":null,"code":"import { FILE_UPLOAD_REQUEST, FILE_UPLOAD_SUCCESS, FILE_UPLOAD_FAIL, FILE_UPLOAD_RESET } from \"../constants/fileConstant\";\nimport axios from \"axios\";\nconst API = process.env.REACT_APP_API; // export const fileUpload = (formData) => async (dispatch) => {\n//   try {\n//     //console.log(formData);\n//     dispatch({ type: FILE_UPLOAD_REQUEST });\n//     let response = [];\n//     await fetch(\"/file_upload\", {\n//       method: \"POST\",\n//       body: formData,\n//     }).then((result) =>\n//       result.json(0).then((data) => {\n//         response = data.data;\n//       })\n//     );\n//     dispatch({\n//       type: FILE_UPLOAD_SUCCESS,\n//       payload: response,\n//     });\n//   } catch (error) {\n//     dispatch({\n//       type: FILE_UPLOAD_FAIL,\n//       payload: error,\n//     });\n//   }\n// };\n\nexport const fileUpload = formData => async dispatch => {\n  dispatch({\n    type: FILE_UPLOAD_REQUEST\n  });\n  await fetch(\"/file_upload\", {\n    method: \"POST\",\n    body: formData\n  }).then(result => result.json(0)).then(data => {\n    // if (data.response_code)\n    //   dispatch({ type: FILE_UPLOAD_FAIL, payload: data.message });\n    // else {\n    //   dispatch({ type: FILE_UPLOAD_SUCCESS, payload: data.data });\n    // }\n    data.response_code & data.response_code != 200 ? console.log(data.response_code) : // dispatch({ type: FILE_UPLOAD_FAIL, payload: data.message })\n    dispatch({\n      type: FILE_UPLOAD_SUCCESS,\n      payload: data.data\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch({\n      type: FILE_UPLOAD_FAIL,\n      payload: error\n    });\n  });\n};\nexport const sayHi = () => async dispatch => {\n  try {\n    console.log(\"calling data\");\n    const data = await fetch(`/say_hi`).then(response => response.json()).then(data => console.log(data));\n\n    if (data) {\n      console.log(data);\n    }\n  } catch (e) {\n    console.log(e.message);\n  }\n};","map":{"version":3,"sources":["/Users/ngocho/Desktop/online_check/frontend/src/actions/fileAction.js"],"names":["FILE_UPLOAD_REQUEST","FILE_UPLOAD_SUCCESS","FILE_UPLOAD_FAIL","FILE_UPLOAD_RESET","axios","API","process","env","REACT_APP_API","fileUpload","formData","dispatch","type","fetch","method","body","then","result","json","data","response_code","console","log","payload","catch","error","sayHi","response","e","message"],"mappings":"AAAA,SACEA,mBADF,EAEEC,mBAFF,EAGEC,gBAHF,EAIEC,iBAJF,QAKO,2BALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAC1DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEZ;AAAR,GAAD,CAAR;AACA,QAAMa,KAAK,CAAC,cAAD,EAAiB;AAC1BC,IAAAA,MAAM,EAAE,MADkB;AAE1BC,IAAAA,IAAI,EAAEL;AAFoB,GAAjB,CAAL,CAIHM,IAJG,CAIGC,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAY,CAAZ,CAJd,EAKHF,IALG,CAKGG,IAAD,IAAU;AACd;AACA;AACA;AACA;AACA;AACAA,IAAAA,IAAI,CAACC,aAAL,GAAsBD,IAAI,CAACC,aAAL,IAAsB,GAA5C,GACIC,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,aAAjB,CADJ,GAEI;AACAT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,mBAAR;AAA6BsB,MAAAA,OAAO,EAAEJ,IAAI,CAACA;AAA3C,KAAD,CAHZ;AAID,GAfG,EAgBHK,KAhBG,CAgBIC,KAAD,IAAW;AAChBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAd,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,gBAAR;AAA0BqB,MAAAA,OAAO,EAAEE;AAAnC,KAAD,CAAR;AACD,GAnBG,CAAN;AAoBD,CAtBM;AAwBP,OAAO,MAAMC,KAAK,GAAG,MAAM,MAAOf,QAAP,IAAoB;AAC7C,MAAI;AACFU,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,UAAMH,IAAI,GAAG,MAAMN,KAAK,CAAE,SAAF,CAAL,CAChBG,IADgB,CACVW,QAAD,IAAcA,QAAQ,CAACT,IAAT,EADH,EAEhBF,IAFgB,CAEVG,IAAD,IAAUE,OAAO,CAACC,GAAR,CAAYH,IAAZ,CAFC,CAAnB;;AAIA,QAAIA,IAAJ,EAAU;AACRE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD;AACF,GATD,CASE,OAAOS,CAAP,EAAU;AACVP,IAAAA,OAAO,CAACC,GAAR,CAAYM,CAAC,CAACC,OAAd;AACD;AACF,CAbM","sourcesContent":["import {\n  FILE_UPLOAD_REQUEST,\n  FILE_UPLOAD_SUCCESS,\n  FILE_UPLOAD_FAIL,\n  FILE_UPLOAD_RESET,\n} from \"../constants/fileConstant\";\nimport axios from \"axios\";\n\nconst API = process.env.REACT_APP_API;\n\n// export const fileUpload = (formData) => async (dispatch) => {\n//   try {\n//     //console.log(formData);\n//     dispatch({ type: FILE_UPLOAD_REQUEST });\n//     let response = [];\n//     await fetch(\"/file_upload\", {\n//       method: \"POST\",\n//       body: formData,\n//     }).then((result) =>\n//       result.json(0).then((data) => {\n//         response = data.data;\n//       })\n//     );\n//     dispatch({\n//       type: FILE_UPLOAD_SUCCESS,\n//       payload: response,\n//     });\n//   } catch (error) {\n//     dispatch({\n//       type: FILE_UPLOAD_FAIL,\n//       payload: error,\n//     });\n//   }\n// };\nexport const fileUpload = (formData) => async (dispatch) => {\n  dispatch({ type: FILE_UPLOAD_REQUEST });\n  await fetch(\"/file_upload\", {\n    method: \"POST\",\n    body: formData,\n  })\n    .then((result) => result.json(0))\n    .then((data) => {\n      // if (data.response_code)\n      //   dispatch({ type: FILE_UPLOAD_FAIL, payload: data.message });\n      // else {\n      //   dispatch({ type: FILE_UPLOAD_SUCCESS, payload: data.data });\n      // }\n      data.response_code & (data.response_code != 200)\n        ? console.log(data.response_code)\n        : // dispatch({ type: FILE_UPLOAD_FAIL, payload: data.message })\n          dispatch({ type: FILE_UPLOAD_SUCCESS, payload: data.data });\n    })\n    .catch((error) => {\n      console.log(error);\n      dispatch({ type: FILE_UPLOAD_FAIL, payload: error });\n    });\n};\n\nexport const sayHi = () => async (dispatch) => {\n  try {\n    console.log(\"calling data\");\n    const data = await fetch(`/say_hi`)\n      .then((response) => response.json())\n      .then((data) => console.log(data));\n\n    if (data) {\n      console.log(data);\n    }\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}