{"ast":null,"code":"import { FILE_UPLOAD_REQUEST, FILE_UPLOAD_SUCCESS, FILE_UPLOAD_FAIL, FILE_UPLOAD_RESET } from \"../constants/fileConstant\";\nimport axios from \"axios\";\nconst API = process.env.REACT_APP_API;\nexport const fileUpload = formData => async dispatch => {\n  try {\n    //console.log(formData);\n    dispatch({\n      type: FILE_UPLOAD_REQUEST\n    });\n    const url = JSON.stringify(`${API}/file_upload`);\n    console.log(2);\n    const res = await fetch(\"http://localhost:5000/file_upload\", {\n      method: \"POST\",\n      body: formData,\n      mode: \"no-cors\",\n      headers: {\n        Accept: \"application/json\"\n      }\n    }).then(response => {\n      conssole.log(JSON.parse(response));\n    }).then(responseJson => console.log(responseJson));\n    dispatch({\n      type: FILE_UPLOAD_SUCCESS,\n      payload: res\n    });\n  } catch (error) {\n    dispatch({\n      type: FILE_UPLOAD_FAIL,\n      payload: error.response && error.response.data.msg ? error.respone.data.msg : error\n    });\n  }\n};\nexport const sayHi = () => async dispatch => {\n  try {\n    console.log(\"calling data\"); // const { data } = axios\n    //   .get({ url: `${API}/say_hi` })\n    //   .then((res) => res.data);\n\n    const data = await fetch(`${API}/say_hi`).then(response => response.json()).then(data => console.log(data));\n\n    if (data) {\n      console.log(data);\n    }\n  } catch (e) {\n    console.log(e.message);\n  }\n};","map":{"version":3,"sources":["/Users/ngocho/Desktop/online_check/frontend/src/actions/fileAction.js"],"names":["FILE_UPLOAD_REQUEST","FILE_UPLOAD_SUCCESS","FILE_UPLOAD_FAIL","FILE_UPLOAD_RESET","axios","API","process","env","REACT_APP_API","fileUpload","formData","dispatch","type","url","JSON","stringify","console","log","res","fetch","method","body","mode","headers","Accept","then","response","conssole","parse","responseJson","payload","error","data","msg","respone","sayHi","json","e","message"],"mappings":"AAAA,SACEA,mBADF,EAEEC,mBAFF,EAGEC,gBAHF,EAIEC,iBAJF,QAKO,2BALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAAxB;AAEA,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACF;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR;AACA,UAAMa,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAgB,GAAEV,GAAI,cAAtB,CAAZ;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;AAC3DC,MAAAA,MAAM,EAAE,MADmD;AAE3DC,MAAAA,IAAI,EAAEX,QAFqD;AAG3DY,MAAAA,IAAI,EAAE,SAHqD;AAI3DC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD;AAJkD,KAAtC,CAAL,CAQfC,IARe,CAQTC,QAAD,IAAc;AAClBC,MAAAA,QAAQ,CAACV,GAAT,CAAaH,IAAI,CAACc,KAAL,CAAWF,QAAX,CAAb;AACD,KAVe,EAWfD,IAXe,CAWTI,YAAD,IAAkBb,OAAO,CAACC,GAAR,CAAYY,YAAZ,CAXR,CAAlB;AAaAlB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,mBADC;AAEP6B,MAAAA,OAAO,EAAEZ;AAFF,KAAD,CAAR;AAID,GAtBD,CAsBE,OAAOa,KAAP,EAAc;AACdpB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,gBADC;AAEP4B,MAAAA,OAAO,EACLC,KAAK,CAACL,QAAN,IAAkBK,KAAK,CAACL,QAAN,CAAeM,IAAf,CAAoBC,GAAtC,GACIF,KAAK,CAACG,OAAN,CAAcF,IAAd,CAAmBC,GADvB,GAEIF;AALC,KAAD,CAAR;AAOD;AACF,CAhCM;AAkCP,OAAO,MAAMI,KAAK,GAAG,MAAM,MAAOxB,QAAP,IAAoB;AAC7C,MAAI;AACFK,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADE,CAGF;AACA;AACA;;AACA,UAAMe,IAAI,GAAG,MAAMb,KAAK,CAAE,GAAEd,GAAI,SAAR,CAAL,CAChBoB,IADgB,CACVC,QAAD,IAAcA,QAAQ,CAACU,IAAT,EADH,EAEhBX,IAFgB,CAEVO,IAAD,IAAUhB,OAAO,CAACC,GAAR,CAAYe,IAAZ,CAFC,CAAnB;;AAIA,QAAIA,IAAJ,EAAU;AACRhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,IAAZ;AACD;AACF,GAbD,CAaE,OAAOK,CAAP,EAAU;AACVrB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,CAAC,CAACC,OAAd;AACD;AACF,CAjBM","sourcesContent":["import {\n  FILE_UPLOAD_REQUEST,\n  FILE_UPLOAD_SUCCESS,\n  FILE_UPLOAD_FAIL,\n  FILE_UPLOAD_RESET,\n} from \"../constants/fileConstant\";\nimport axios from \"axios\";\n\nconst API = process.env.REACT_APP_API;\n\nexport const fileUpload = (formData) => async (dispatch) => {\n  try {\n    //console.log(formData);\n    dispatch({ type: FILE_UPLOAD_REQUEST });\n    const url = JSON.stringify(`${API}/file_upload`);\n    console.log(2);\n    const res = await fetch(\"http://localhost:5000/file_upload\", {\n      method: \"POST\",\n      body: formData,\n      mode: \"no-cors\",\n      headers: {\n        Accept: \"application/json\",\n      },\n    })\n      .then((response) => {\n        conssole.log(JSON.parse(response));\n      })\n      .then((responseJson) => console.log(responseJson));\n\n    dispatch({\n      type: FILE_UPLOAD_SUCCESS,\n      payload: res,\n    });\n  } catch (error) {\n    dispatch({\n      type: FILE_UPLOAD_FAIL,\n      payload:\n        error.response && error.response.data.msg\n          ? error.respone.data.msg\n          : error,\n    });\n  }\n};\n\nexport const sayHi = () => async (dispatch) => {\n  try {\n    console.log(\"calling data\");\n\n    // const { data } = axios\n    //   .get({ url: `${API}/say_hi` })\n    //   .then((res) => res.data);\n    const data = await fetch(`${API}/say_hi`)\n      .then((response) => response.json())\n      .then((data) => console.log(data));\n\n    if (data) {\n      console.log(data);\n    }\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}