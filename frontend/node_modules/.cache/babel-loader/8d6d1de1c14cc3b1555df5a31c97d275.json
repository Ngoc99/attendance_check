{"ast":null,"code":"import { FILE_UPLOAD_REQUEST, FILE_UPLOAD_SUCCESS, FILE_UPLOAD_FAIL, FILE_UPLOAD_RESET } from \"../constants/fileConstant\";\nconst API = process.env.REACT_APP_API;\nexport const fileUpload = ({\n  fileUpload\n}) => async dispatch => {\n  try {\n    dispatch({\n      type: FILE_UPLOAD_REQUEST\n    });\n    const data = await fetch({\n      url: `/`,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        fileUpload\n      }\n    });\n    dispatch({\n      type: FILE_UPLOAD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: FILE_UPLOAD_FAIL,\n      payload: error.response && error.response.data.msg ? error.respone.data.msg : error\n    });\n  }\n};\nexport const sayHi = () => async dispatch => {\n  try {\n    console.log(\"calling data\"); // const { data } = axios\n    //   .get({ url: `${API}/say_hi` })\n    //   .then((res) => res.data);\n\n    const data = await fetch(`${API}/say_hi`).then(response => response.json()).then(data => console.log(data));\n\n    if (data) {\n      console.log(data);\n    }\n  } catch (e) {\n    console.log(e.message);\n  }\n};","map":{"version":3,"sources":["/Users/ngocho/Desktop/online_check/frontend/src/actions/fileAction.js"],"names":["FILE_UPLOAD_REQUEST","FILE_UPLOAD_SUCCESS","FILE_UPLOAD_FAIL","FILE_UPLOAD_RESET","API","process","env","REACT_APP_API","fileUpload","dispatch","type","data","fetch","url","method","headers","body","payload","error","response","msg","respone","sayHi","console","log","then","json","e","message"],"mappings":"AAAA,SACEA,mBADF,EAEEC,mBAFF,EAGEC,gBAHF,EAIEC,iBAJF,QAKO,2BALP;AAOA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAoB,MAAOC,QAAP,IAAoB;AAChE,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR;AACA,UAAMW,IAAI,GAAG,MAAMC,KAAK,CAAC;AACvBC,MAAAA,GAAG,EAAG,GADiB;AAEvBC,MAAAA,MAAM,EAAE,MAFe;AAGvBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAHc;AAIvBC,MAAAA,IAAI,EAAE;AAAER,QAAAA;AAAF;AAJiB,KAAD,CAAxB;AAMAC,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,mBADC;AAEPgB,MAAAA,OAAO,EAAEN;AAFF,KAAD,CAAR;AAID,GAZD,CAYE,OAAOO,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,gBADC;AAEPe,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,GAAtC,GACIF,KAAK,CAACG,OAAN,CAAcV,IAAd,CAAmBS,GADvB,GAEIF;AALC,KAAD,CAAR;AAOD;AACF,CAtBM;AAwBP,OAAO,MAAMI,KAAK,GAAG,MAAM,MAAOb,QAAP,IAAoB;AAC7C,MAAI;AACFc,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADE,CAGF;AACA;AACA;;AACA,UAAMb,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAER,GAAI,SAAR,CAAL,CAChBqB,IADgB,CACVN,QAAD,IAAcA,QAAQ,CAACO,IAAT,EADH,EAEhBD,IAFgB,CAEVd,IAAD,IAAUY,OAAO,CAACC,GAAR,CAAYb,IAAZ,CAFC,CAAnB;;AAIA,QAAIA,IAAJ,EAAU;AACRY,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACD;AACF,GAbD,CAaE,OAAOgB,CAAP,EAAU;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,CAAC,CAACC,OAAd;AACD;AACF,CAjBM","sourcesContent":["import {\n  FILE_UPLOAD_REQUEST,\n  FILE_UPLOAD_SUCCESS,\n  FILE_UPLOAD_FAIL,\n  FILE_UPLOAD_RESET,\n} from \"../constants/fileConstant\";\n\nconst API = process.env.REACT_APP_API;\n\nexport const fileUpload = ({ fileUpload }) => async (dispatch) => {\n  try {\n    dispatch({ type: FILE_UPLOAD_REQUEST });\n    const data = await fetch({\n      url: `/`,\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: { fileUpload },\n    });\n    dispatch({\n      type: FILE_UPLOAD_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: FILE_UPLOAD_FAIL,\n      payload:\n        error.response && error.response.data.msg\n          ? error.respone.data.msg\n          : error,\n    });\n  }\n};\n\nexport const sayHi = () => async (dispatch) => {\n  try {\n    console.log(\"calling data\");\n\n    // const { data } = axios\n    //   .get({ url: `${API}/say_hi` })\n    //   .then((res) => res.data);\n    const data = await fetch(`${API}/say_hi`)\n      .then((response) => response.json())\n      .then((data) => console.log(data));\n\n    if (data) {\n      console.log(data);\n    }\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}